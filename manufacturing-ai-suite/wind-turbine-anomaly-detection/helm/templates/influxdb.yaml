#
# Apache v2 license
# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.config.influx_db_server.name }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: {{ .Values.config.influx_db_server.influx_http }} 
    name: influx-db-port
  selector:
    app: influxdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: influxdb
  name: deployment-influxdb
  namespace: {{ .Values.namespace }}

spec:
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      {{- if and .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}
      containers:
      - name: ia-influxdb
        image: influxdb:1.11.8
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          runAsUser: {{ $.Values.env.TIMESERIES_UID }}
          runAsGroup: {{ $.Values.env.TIMESERIES_UID }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        env:
        {{ if eq .Values.env.SECURE_MODE false}}
        - name: INFLUXDB_CONFIG_PATH
          value: /etc/influxdb/influxdb_devmode.conf
        {{- else }}
        - name: INFLUXDB_CONFIG_PATH
          value: /etc/influxdb/influxdb.conf
        {{ end }}
        - name: INFLUXDB_DB
          value: 'datain'
        - name: INFLUXDB_ADMIN_PASSWORD
          value: '{{ .Values.env.INFLUXDB_PASSWORD }}'
        - name: INFLUXDB_ADMIN_USER
          value: 'admin'
        - name: INFLUXDB_USER_PASSWORD
          value: '{{ .Values.env.INFLUXDB_PASSWORD }}'
        - name: INFLUXDB_USER
          value: '{{ .Values.env.INFLUXDB_USERNAME }}'
        - name: INFLUXDB_LOGGING_LEVEL
          value: '{{ .Values.env.LOG_LEVEL }}'
        - name: RETENTION_DURATION
          value: '{{ .Values.env.INFLUXDB_RETENTION_DURATION }}'
        - name: INFLUXDB_TLS_CIPHERS
          value: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        volumeMounts:
        {{ if eq .Values.env.SECURE_MODE true}}
        - name: certs
          mountPath: /run/secrets/ca_certificate.pem
          subPath: ca_certificate.pem
        - name: certs
          mountPath: /run/secrets/influxdb_Server_server_certificate.pem
          subPath: influxdb_Server_server_certificate.pem
        - name: certs
          mountPath: /run/secrets/influxdb_Server_server_key.pem
          subPath: influxdb_Server_server_key.pem
        {{ end }}
        - name: tmpfs-data-volume
          mountPath: /var/lib/influxdb
        - name: influx-config
          mountPath: /etc/influxdb/influxdb.conf
          subPath: influxdb.conf
        - name: influx-dev-config
          mountPath: /etc/influxdb/influxdb_devmode.conf
          subPath: influxdb_devmode.conf
        - name: init-influxdb
          mountPath: /docker-entrypoint-initdb.d/init-influxdb.sh
          subPath: init-influxdb.sh
      volumes:
      - name: init-influxdb
        configMap:
          name: init-influxdb
      - name: influx-config
        configMap:
          name: influxdb-conf-input
      - name: influx-dev-config
        configMap:
          name: influxdb-dev-conf-input
      - name: tmpfs-data-volume
        emptyDir: {}
      {{ if eq .Values.env.SECURE_MODE true }}
      - name: certs
        secret:
          secretName: ts-certs
          items:
          - key: ca_certificate.pem
            path: ca_certificate.pem 
          - key: influxdb_Server_server_certificate.pem
            path: influxdb_Server_server_certificate.pem
          - key: influxdb_Server_server_key.pem
            path: influxdb_Server_server_key.pem
      {{ end }}

