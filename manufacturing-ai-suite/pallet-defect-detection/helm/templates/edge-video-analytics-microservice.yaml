# Copyright (c) 2024 Intel Corporation.
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.config.edge_video_analytics_microservice.name }}
  namespace: {{ $.Values.namespace }}
spec:
  type: NodePort
  selector:
    app: edge-video-analytics-microservice
  ports:
  - name: "rest-api"
    port: {{ $.Values.config.edge_video_analytics_microservice.int.rest_api_port }}
    targetPort: {{ $.Values.config.edge_video_analytics_microservice.int.rest_api_port }}
    nodePort: {{ $.Values.config.edge_video_analytics_microservice.ext.rest_api_port }}
  - name: "rtsp-output-streaming"
    port: {{ $.Values.config.edge_video_analytics_microservice.int.rtsp_output_port }}
    targetPort: {{ $.Values.config.edge_video_analytics_microservice.int.rtsp_output_port }}
    nodePort: {{ $.Values.config.edge_video_analytics_microservice.ext.rtsp_output_port }}
---
{{- $global := . -}}
{{- range $instance_idx := until (int .Values.num_video_instances) -}}
{{- $instance := "" }}
{{- $datastore_port := "" }}
{{- $visualizer_port := "" }}
{{- if $.Values.config.datastore}}
{{- $datastore_port = $global.Values.config.datastore.grpc_port }}
{{- end }}
{{- if $.Values.config.multimodal_data_visualization_streaming}}
{{- $visualizer_port = $global.Values.config.multimodal_data_visualization_streaming.grpc_port }}
{{- end }}
{{- if gt (int $global.Values.num_video_instances) 1 }}
{{- $instance = "" }}
{{- $instance = add 1 $instance_idx }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edge-video-analytics-microservice
  name: deployment-{{ $global.Values.config.edge_video_analytics_microservice.name }}{{ $instance }}
  namespace: {{ $global.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge-video-analytics-microservice
  template:
    metadata:
      labels:
        app: edge-video-analytics-microservice
      {{ if eq $global.Values.config.edge_video_analytics_microservice.gige_camera true }}
      annotations:
        k8s.v1.cni.cncf.io/networks: macvlan-conf
      {{ end }}
    spec:
      securityContext:
        supplementalGroups: [109,110]
      {{- if eq $global.Values.config.edge_video_analytics_microservice.accelerator "hddl" }}
      nodeSelector:
        hddl: "true"
      {{- else if eq $global.Values.config.edge_video_analytics_microservice.accelerator "ncs2" }}
      nodeSelector:
        ncs2: "true"
      {{- end }}
      {{- if and $global.Values.DOCKER_USERNAME $global.Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}
      containers:
      - name: ia-{{ $global.Values.config.edge_video_analytics_microservice.name }}{{ $instance }}
        image: {{ $global.Values.DOCKER_REGISTRY }}intel/edge-video-analytics-microservice:2.3.0
        imagePullPolicy: {{ $global.Values.imagePullPolicy }}
        securityContext:
          privileged: true  # Required for direct access to /dev
        volumeMounts:
        - mountPath: /var/cache/pipeline_root
          name: vol-evam-pipeline-root-tmpfs0
        - name: dev
          mountPath: /dev
        - name: dev-shm
          mountPath: /dev/shm
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: run-udev
          mountPath: /run/udev
        - name: {{ $global.Values.volumes.pipelines.name }}
          mountPath: {{ $global.Values.volumes.pipelines.location }}
        - name: {{ $global.Values.volumes.models.name }}
          mountPath: {{ $global.Values.volumes.models.location }}
        {{ if eq $global.Values.env.DEV_MODE false}}
        - name: certs
          mountPath: /run/secrets/etcd/
        - name: certs
          mountPath: /run/secrets/EdgeVideoAnalyticsMicroservice{{ $instance }}_gRPC
        {{ end }}
        - name: evam-input
          mountPath: /home/pipeline-server/config.json
          subPath: config.json
        - name: model-registry-temp-models
          mountPath: /home/pipeline-server/mr_models
        env:
        - name: AppName
          value: 'EdgeVideoAnalyticsMicroservice{{ $instance }}'
        - name: DEV_MODE
          value: '{{ $global.Values.env.DEV_MODE }}'
        - name: READ_CONFIG_FROM_FILE_ENV
          value: '{{ $.Values.env.READ_CONFIG_FROM_FILE_ENV }}'
        - name: PROFILING_MODE
          value: '{{ $global.Values.env.PROFILING_MODE }}'
        - name: ETCD_HOST
          value: {{ $global.Values.config.etcd.name }}
        - name: ETCD_CLIENT_PORT
          value: '{{ $global.Values.config.etcd.client_port }}'
        - name:  ETCD_PREFIX
          value: ''
        - name: MODELS_DIR
          value: "{{ $global.Values.env.models_dir }}"
        - name: PIPELINES_DIR
          value: "{{ $global.Values.env.pipelines_dir }}"
        - name:  GENICAM
          value: "Balluff"
        - name: RUN_MODE
          value: "EVA"
        - name: APPEND_PIPELINE_NAME_TO_PUBLISHER_TOPIC
          value: "{{ $.Values.env.APPEND_PIPELINE_NAME_TO_PUBLISHER_TOPIC }}"
        - name: REST_SERVER_PORT
          value: "8080"
        - name: RUNTIME_LICENSE_CHECK_FREQ_SECS
          value: "{{ $global.Values.env.RUNTIME_LICENSE_CHECK_FREQ_SECS }}"
        - name: APPLICATION_RESTART_FREQ_SECS
          value: "{{ $global.Values.env.APPLICATION_RESTART_FREQ_SECS }}"
        - name: LICENSE_ENABLED
          value: "{{ $global.Values.env.LICENSE_ENABLED }}"
        - name: LSHOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: LSFEATURE_NAME
          value: "EVAM"
        - name: no_proxy
          value: localhost,127.0.0.1,.intel.com,multimodal-data-visualization-streaming,{{ $.Values.env.RTSP_CAMERA_IP }},{{ $.Values.env.HOST_IP }}
        - name: NO_PROXY
          value: localhost,127.0.0.1,.intel.com,multimodal-data-visualization-streaming,{{ $.Values.env.RTSP_CAMERA_IP }},{{ $.Values.env.HOST_IP }}
        - name: http_proxy
          value: {{ $.Values.env.http_proxy }}
        - name: https_proxy
          value: {{ $.Values.env.https_proxy }}
        {{- if $.Values.config.datastore }}
        - name: no_proxy
          value: $(no_proxy),{{ $.Values.config.datastore.name }}
        - name: NO_PROXY
          value: $(NO_PROXY),{{ $.Values.config.datastore.name }}
        {{- end }}
        {{- if $.Values.config.multimodal_data_visualization_streaming}}  
        - name: no_proxy
          value: $(no_proxy),{{ $.Values.config.multimodal_data_visualization_streaming.name }},{{ $.Values.config.model_registry.name }},{{ $.Values.env.HOST_IP }}
        - name: NO_PROXY
          value: $(NO_PROXY),{{ $.Values.config.multimodal_data_visualization_streaming.name }},{{ $.Values.config.model_registry.name }},{{ $.Values.env.HOST_IP }}
        {{- end }}
        {{ if eq $global.Values.env.DEV_MODE false}}
        - name: CONFIGMGR_CACERT
          value: "/run/secrets/etcd/cacert.pem"
        - name: CONFIGMGR_CERT
          value: "/run/secrets/etcd/EdgeVideoAnalyticsMicroservice{{ $instance }}_client_certificate.pem"
        - name: CONFIGMGR_KEY
          value: "/run/secrets/etcd/EdgeVideoAnalyticsMicroservice{{ $instance }}_client_key.pem"
        {{ end }}
        - name: S3_STORAGE_HOST
          value: "{{ $.Values.env.HOST_IP }}"
        - name: S3_STORAGE_PORT
          value: "{{ $.Values.env.S3_STORAGE_PORT }}"
        - name: S3_STORAGE_USER
          value: "{{ $.Values.env.MINIO_ACCESS_KEY }}"
        - name: S3_STORAGE_PASS
          value: "{{ $.Values.env.MINIO_SECRET_KEY }}"
      initContainers:
      - name: wait-for-model-registry
        image: busybox
        command: ['sh', '-c', 'wget --spider --quiet --tries=5 --timeout=3 http://model-registry:8111/docs']
      volumes:
      - name: vol-evam-pipeline-root-tmpfs0
        emptyDir: {}
      - name: dev
        hostPath:
          path: /dev
      - name: dev-shm
        hostPath:
          path: /dev/shm
      - name: tmp
        hostPath:
          path: /tmp
      - name: var-tmp
        hostPath:
          path: /var/tmp
      - name: run-udev
        hostPath:
          path: /run/udev
      - name: model-registry-temp-models
        emptyDir: {}
      - name: {{ $global.Values.volumes.models.name }}
        hostPath:
          path: {{ $global.Values.volumes.models.hostpath }}
          #type: DirectoryOrCreate
      - name: {{ $global.Values.volumes.pipelines.name }}
        hostPath:
          path: {{ $global.Values.volumes.pipelines.hostpath }}
          #type: DirectoryOrCreate
      - name: evam-input
        configMap:
          name: evam-config-input
      {{ if eq $global.Values.env.DEV_MODE false}}
      - name: certs
        secret:
          secretName: eii-certs
          items:
          - key: cacert.pem
            path: cacert.pem
          - key: EdgeVideoAnalyticsMicroservice{{ $instance }}_client_certificate.pem
            path: EdgeVideoAnalyticsMicroservice{{ $instance }}_client_certificate.pem
          - key: EdgeVideoAnalyticsMicroservice{{ $instance }}_client_key.pem
            path: EdgeVideoAnalyticsMicroservice{{ $instance }}_client_key.pem
          - key: EdgeVideoAnalyticsMicroservice{{ $instance }}_gRPC_server_certificate.pem
            path: EdgeVideoAnalyticsMicroservice{{ $instance }}_gRPC_server_certificate.pem
          - key: EdgeVideoAnalyticsMicroservice{{ $instance }}_gRPC_server_key.pem
            path: EdgeVideoAnalyticsMicroservice{{ $instance }}_gRPC_server_key.pem
      {{ end }}
---
{{- end }}
